'''
Snakefile 

Authors:
Layer Lab

Adapted from supplementary materials of:

Bertolotti, Alicia C., et al. 'The structural variation landscape
in 492 Atlantic salmon genomes.' bioRxiv (2020).
'''
import os

# tell snakemake that the config file exits
configfile: 'config.yaml'

# extract the sample name. 
sample_name = os.path.basename(config['input']['forward']) \
if config['input']['sample_name'] == '' else config['input']['sample_name']

rule all:
    input:
        '../temp/sorted_reads/localTest.bam.bai'

# indexing the reference must be done at all time
rule bwa_index_reference: 
    input:
        config['input']['reference'] 
    output: 
        os.path.join(config['run']['temp_dir'], os.path.basename(config['input']['reference']))
    log:
        os.path.join(config['run']['logs_dir'], 'bwa_index_reference.log')
    shell:
        'bwa index {input} &> {log}' 

rule bwa_map:
    input:
        # "reverse" is a keyword internally to snakemake, so we have to shorten it to rev
        reference = rules.bwa_index_reference.output,
        forward = config['input']['samples']['forward'],
        rev = config['input']['samples']['reverse']
    output:
        os.path.join(config['run']['temp_dir'], os.path.join('mapped_reads', '{sample_name}.bam'))
    params:
        rg = '@RG\\tID:{sample_name}\\tSM:{sample_name}\\tLB:lib1' 
    log:
        os.path.join(config['run']['logs_dir'], 'bwa_{sample_name}.log')
    threads:
        # its ok if this is more threads than are available to us. Snakemake
        # does the operation: threads = min(threads, cores) so we can't go over
        threads = workflow.cores
    shell:
        '(bwa mem -R {params.rg} -t {threads} {input.reference}'
        '{input.forward} {input.rev} | samtools view -Sb - > {output})'
        '2> {log}'

rule samtools_sort:
    input:
        rules.bwa_map.output
    output:
        os.path.join(config['run']['temp_dir'], os.path.join('sorted_reads', '{sample_name}.bam'))
    params:
        samtools_temp = os.path.join('sorted_reads', sample_name)
    log:
        os.path.join(config['run']['logs_dir'], 'sort_{sample_name}.log')
    shell:
        'samtools sort -T {params.samtools_temp} -O bam {input} > {output} 2> {log}'

rule samtools_index:
    input:
        rules.samtools_sort.output
    output:
        os.path.join(config['run']['temp_dir'], os.path.join('sorted_reads', '{sample_name}.bam.bai'))
    shell:
        'samtools index {input}'
